version: "3.8"

services:
  zitadel-external-tls:
    extends:
      service: zitadel-init
    command: 'start-from-setup --init-projections --masterkey "MasterkeyNeedsToHave32Characters"'
    environment:
      - ZITADEL_EXTERNALPORT=443
      - ZITADEL_EXTERNALSECURE=true
      - ZITADEL_TLS_ENABLED=false
      # database configuration
      - ZITADEL_DATABASE_POSTGRES_HOST=db
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel_user
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=zitadel_pw
      - ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=root
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=postgres
      - ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable
    networks:
      - "zitadel"
      - "traefik_global"
    depends_on:
      db:
        condition: "service_healthy"
    hostname: zitadel.taiida.com
    container_name: zitadel
    labels:
      - traefik.http.routers.zitadel.entrypoints=https
      - traefik.http.routers.zitadel.rule=Host(`zitadel.taiida.com`)
      - traefik.http.routers.zitadel.tls.certresolver=letsencrypt
      - traefik.http.routers.zitadel.tls=true

  zitadel-init:
    user: "$UID"
    image: "${ZITADEL_IMAGE:-ghcr.io/zitadel/zitadel:latest}"
    command: "init"
    depends_on:
      db:
        condition: "service_healthy"
    environment:
      # Using an external domain other than localhost proofs, that the proxy configuration works.
      # If ZITADEL can't resolve a requests original host to this domain,
      # it will return a 404 Instance not found error.
      - ZITADEL_EXTERNALDOMAIN=zitadel.taiida.com
      # In case something doesn't work as expected,
      # it can be handy to be able to read the access logs.
      - ZITADEL_LOGSTORE_ACCESS_STDOUT_ENABLED=true
      # For convenience, ZITADEL should not ask to change the initial admin users password.
      - ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORDCHANGEREQUIRED=false
      # database configuration
      - ZITADEL_DATABASE_POSTGRES_HOST=db
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel_user
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=zitadel_pw
      - ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=root
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=postgres
      - ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable
    networks:
      - "zitadel"
    healthcheck:
      test: ["CMD", "/app/zitadel", "ready"]
      interval: "10s"
      timeout: "5s"
      retries: 5
      start_period: "10s"

  db:
    restart: "always"
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d zitadel"]
      interval: 5s
      timeout: 60s
      retries: 10
      start_period: 5s
    ports:
      - "5432:5432"
    networks:
      - "zitadel"
    volumes:
      - "zitadel_data:/var/lib/postgresql/data:rw"

volumes:
  zitadel_data:
    external: true

networks:
  zitadel:
  traefik_global:
    external: true
