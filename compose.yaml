networks:
  global:

services:
  main:
    command:
      - --api=true
      - --api.dashboard=true

      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${CF_API_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --providers.docker.exposedByDefault=false
      - --providers.docker=true

      - --log.level=DEBUG
    env_file:
      - ./.env

    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CF_API_TOKEN}

    hostname: ${HOST_NAME}
    container_name: traefik
    image: ${TRAEFIK_IMAGE}

    labels:
      - traefik.enable=true
      - traefik.http.middlewares.auth.basicauth.usersFile=/etc/traefik/.htpasswd
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.rule=Host(`${HOST_NAME}`)
      - traefik.http.routers.traefik.service=api@internal

    networks:
      - global

    ports:
      - 80:80
      - 443:443

    restart: unless-stopped

    volumes:
      - .htpasswd:/etc/traefik/.htpasswd
      - "/run/user/1000/podman/podman.sock:/var/run/docker.sock:ro"

      - acme:/letsencrypt

    security_opt:
      - label=type:container_runtime_t

volumes:
  acme:
